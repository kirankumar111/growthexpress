{"ast":null,"code":"var _jsxFileName = \"/Users/alienx/Documents/Personal/oylclient/src/sections/Login.jsx\";\nimport React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\"; // import { Notify } from \"bc-react-notifier\";\n// import DataSource from \"../config/api\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.authenticate = event => {\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n\n    this.authenticateSubmit = async event => {\n      event.preventDefault();\n      this.setState({\n        isLoading: true\n      });\n\n      try {\n        if (this.state.email === \"kumar.kiran@docsapp.in\" && this.state.password === \"docsapp\") {\n          this.props.userHasAuthenticated(true);\n          this.props.history.push(\"/\"); // DataSource.getPatients()\n          //   .done(function(data) {\n          //     console.log(data);\n          //   })\n          //   .error(function(error) {\n          //     Notify.error(\"Not able to connect backend\", \"toast\", \"error\", 4000);\n          //   });\n        }\n      } catch (e) {\n        alert(e.message);\n      }\n    };\n\n    this.state = {\n      isLoading: false,\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  validateForm() {\n    return this.state.email.length > 0 && this.state.password.length > 0;\n  }\n\n  render() {\n    let page = null;\n    let loginPage = React.createElement(Form, {\n      onSubmit: this.authenticateSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"email\",\n      bssize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Form.Control, {\n      autoFocus: true,\n      type: \"email\",\n      value: this.state.email,\n      onChange: this.authenticate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"password\",\n      bssize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Form.Control, {\n      value: this.state.password,\n      onChange: this.authenticate //{e => this.setState({ password: e.target.value })}\n      ,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(LoaderButton, {\n      block: true,\n      variant: \"light\",\n      bssize: \"large\",\n      disabled: !this.validateForm(),\n      type: \"submit\",\n      isLoading: this.state.isLoading,\n      text: \"Login\",\n      loadingText: \"Logging in\\u2026\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n    page = loginPage;\n    return React.createElement(\"div\", {\n      className: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, page);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/alienx/Documents/Personal/oylclient/src/sections/Login.jsx"],"names":["React","Form","LoaderButton","Login","Component","constructor","props","authenticate","event","setState","target","id","value","authenticateSubmit","preventDefault","isLoading","state","email","password","userHasAuthenticated","history","push","e","alert","message","validateForm","length","render","page","loginPage"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\n// import { Notify } from \"bc-react-notifier\";\n// import DataSource from \"../config/api\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  validateForm() {\n    return this.state.email.length > 0 && this.state.password.length > 0;\n  }\n\n  authenticate = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  };\n\n  authenticateSubmit = async event => {\n    event.preventDefault();\n    this.setState({ isLoading: true });\n    try {\n      if (\n        this.state.email === \"kumar.kiran@docsapp.in\" &&\n        this.state.password === \"docsapp\"\n      ) {\n        this.props.userHasAuthenticated(true);\n        this.props.history.push(\"/\");\n        // DataSource.getPatients()\n        //   .done(function(data) {\n        //     console.log(data);\n        //   })\n        //   .error(function(error) {\n        //     Notify.error(\"Not able to connect backend\", \"toast\", \"error\", 4000);\n        //   });\n      }\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  render() {\n    let page = null;\n    let loginPage = (\n      <Form onSubmit={this.authenticateSubmit}>\n        <Form.Group controlId=\"email\" bssize=\"large\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"email\"\n            value={this.state.email}\n            onChange={this.authenticate}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"password\" bssize=\"large\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            value={this.state.password}\n            onChange={this.authenticate} //{e => this.setState({ password: e.target.value })}\n            type=\"password\"\n          />\n        </Form.Group>\n        <LoaderButton\n          block\n          variant=\"light\"\n          bssize=\"large\"\n          disabled={!this.validateForm()}\n          type=\"submit\"\n          isLoading={this.state.isLoading}\n          text=\"Login\"\n          loadingText=\"Logging inâ€¦\"\n        />\n      </Form>\n    );\n    page = loginPage;\n    return <div className=\"Login\">{page}</div>;\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}