{"ast":null,"code":"var _jsxFileName = \"/Users/alienx/Downloads/Personal/oylclient/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Routes from \"./Route\"; // import login from \"./config/api\";\n// import axios from \"axios\";\n\nimport Navigation from \"./sections/Navigation\"; // const HOST = \"https://localhost:8080\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      patients: []\n    };\n\n    this.userHasAuthenticated = authenticated => {\n      this.setState({\n        isAuthenticated: authenticated\n      });\n    };\n\n    this.handleLogout = event => {\n      this.userHasAuthenticated(false);\n    };\n\n    this.state = {\n      isAuthenticated: false\n    };\n  }\n\n  render() {\n    const childProps = {\n      isAuthenticated: this.state.isAuthenticated,\n      userHasAuthenticated: this.userHasAuthenticated\n    };\n    return React.createElement(\"div\", {\n      className: \"App container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      childProps: childProps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(Routes, {\n      childProps: childProps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n  }\n\n}\n\nReactDOM.render(React.createElement(Router, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n})), document.getElementById(\"wrapper\"));","map":{"version":3,"sources":["/Users/alienx/Downloads/Personal/oylclient/src/index.js"],"names":["React","ReactDOM","BrowserRouter","Router","Routes","Navigation","App","Component","constructor","props","state","patients","userHasAuthenticated","authenticated","setState","isAuthenticated","handleLogout","event","render","childProps","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,OAAOC,MAAP,MAAmB,SAAnB,C,CAEA;AACA;;AACA,OAAOC,UAAP,MAAuB,uBAAvB,C,CAEA;;AAEA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;AADiB,SADnBC,KACmB,GADX;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KACW;;AAAA,SAMnBC,oBANmB,GAMIC,aAAa,IAAI;AACtC,WAAKC,QAAL,CAAc;AAAEC,QAAAA,eAAe,EAAEF;AAAnB,OAAd;AACD,KARkB;;AAAA,SASnBG,YATmB,GASJC,KAAK,IAAI;AACtB,WAAKL,oBAAL,CAA0B,KAA1B;AACD,KAXkB;;AAEjB,SAAKF,KAAL,GAAa;AACXK,MAAAA,eAAe,EAAE;AADN,KAAb;AAGD;;AAODG,EAAAA,MAAM,GAAG;AACP,UAAMC,UAAU,GAAG;AACjBJ,MAAAA,eAAe,EAAE,KAAKL,KAAL,CAAWK,eADX;AAEjBH,MAAAA,oBAAoB,EAAE,KAAKA;AAFV,KAAnB;AAIA,WACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,UAAU,EAAEO,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAQ,MAAA,UAAU,EAAEA,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAzB+B;;AA4BlClB,QAAQ,CAACiB,MAAT,CACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEE,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAJF","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Routes from \"./Route\";\n\n// import login from \"./config/api\";\n// import axios from \"axios\";\nimport Navigation from \"./sections/Navigation\";\n\n// const HOST = \"https://localhost:8080\";\n\nclass App extends React.Component {\n  state = { patients: [] };\n  constructor(props) {\n    super();\n    this.state = {\n      isAuthenticated: false\n    };\n  }\n  userHasAuthenticated = authenticated => {\n    this.setState({ isAuthenticated: authenticated });\n  };\n  handleLogout = event => {\n    this.userHasAuthenticated(false);\n  };\n  render() {\n    const childProps = {\n      isAuthenticated: this.state.isAuthenticated,\n      userHasAuthenticated: this.userHasAuthenticated\n    };\n    return (\n      <div className=\"App container-fluid\">\n        <Navigation childProps={childProps} />\n        <Routes childProps={childProps} />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"wrapper\")\n);\n"]},"metadata":{},"sourceType":"module"}